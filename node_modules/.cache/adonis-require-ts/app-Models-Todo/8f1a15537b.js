"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const Orm_1 = global[Symbol.for('ioc.use')]("Adonis/Lucid/Orm");
class Todo extends Orm_1.BaseModel {
}
__decorate([
    (0, Orm_1.column)({ isPrimary: true }),
    __metadata("design:type", Number)
], Todo.prototype, "id", void 0);
__decorate([
    (0, Orm_1.column)({}),
    __metadata("design:type", String)
], Todo.prototype, "title", void 0);
__decorate([
    (0, Orm_1.column)({}),
    __metadata("design:type", String)
], Todo.prototype, "desc", void 0);
__decorate([
    (0, Orm_1.column)({}),
    __metadata("design:type", Boolean)
], Todo.prototype, "status", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true }),
    __metadata("design:type", typeof (_a = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _a : Object)
], Todo.prototype, "createdAt", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true, autoUpdate: true }),
    __metadata("design:type", typeof (_b = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _b : Object)
], Todo.prototype, "updatedAt", void 0);
exports.default = Todo;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9kby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlRvZG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsaUNBQWlDO0FBQ2pDLGdFQUEwRDtBQUUxRCxNQUFxQixJQUFLLFNBQVEsZUFBUztDQWtCMUM7QUFoQkM7SUFEQyxJQUFBLFlBQU0sRUFBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQzs7Z0NBQ1Y7QUFHbEI7SUFEQyxJQUFBLFlBQU0sRUFBQyxFQUFFLENBQUM7O21DQUNVO0FBR3JCO0lBREMsSUFBQSxZQUFNLEVBQUMsRUFBRSxDQUFDOztrQ0FDUztBQUdwQjtJQURDLElBQUEsWUFBTSxFQUFDLEVBQUUsQ0FBQzs7b0NBQ1k7QUFHdkI7SUFEQyxZQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxDQUFDO2tEQUNwQixnQkFBUSxvQkFBUixnQkFBUTt1Q0FBQztBQUczQjtJQURDLFlBQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQztrREFDdEMsZ0JBQVEsb0JBQVIsZ0JBQVE7dUNBQUM7QUFqQjdCLHVCQWtCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGVUaW1lIH0gZnJvbSBcImx1eG9uXCI7XG5pbXBvcnQgeyBCYXNlTW9kZWwsIGNvbHVtbiB9IGZyb20gXCJAaW9jOkFkb25pcy9MdWNpZC9Pcm1cIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9kbyBleHRlbmRzIEJhc2VNb2RlbCB7XG4gIEBjb2x1bW4oeyBpc1ByaW1hcnk6IHRydWUgfSlcbiAgcHVibGljIGlkOiBudW1iZXI7XG5cbiAgQGNvbHVtbih7fSlcbiAgcHVibGljIHRpdGxlOiBzdHJpbmc7XG5cbiAgQGNvbHVtbih7fSlcbiAgcHVibGljIGRlc2M6IHN0cmluZztcblxuICBAY29sdW1uKHt9KVxuICBwdWJsaWMgc3RhdHVzOiBib29sZWFuO1xuXG4gIEBjb2x1bW4uZGF0ZVRpbWUoeyBhdXRvQ3JlYXRlOiB0cnVlIH0pXG4gIHB1YmxpYyBjcmVhdGVkQXQ6IERhdGVUaW1lO1xuXG4gIEBjb2x1bW4uZGF0ZVRpbWUoeyBhdXRvQ3JlYXRlOiB0cnVlLCBhdXRvVXBkYXRlOiB0cnVlIH0pXG4gIHB1YmxpYyB1cGRhdGVkQXQ6IERhdGVUaW1lO1xufVxuIl19